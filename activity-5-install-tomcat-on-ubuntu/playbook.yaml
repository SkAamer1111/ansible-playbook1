---
- name: installing tomcat on ubuntu 22.04
  become: yes
  hosts: appservers
  vars:
    home_dirctory: /opt/tomcat
    shell: /bin/false
    user_name: tomcat
    group_name: tomcat
    tomcat_major_version: 10
    tomcat_link: "https://www-eu.apache.org/dist/tomcat/tomcat-{{ tomcat_major_version }}/v{{ tomcat_version }}/bin/apache-tomcat-{{ tomcat_version }}.tar.gz"
  tasks:
    - name: check os is ubuntu or not
      ansible.builtin.fail:
        msg: "this is works on only ubuntu distribution"
      when: ansible_facts["os_family"] != "Debian"

    - name: installing java 11 
      ansible.builtin.apt:
        name: "{{ java_version }}"
        state: present
        update_cache : yes

    - name: ensure group tomcat is present
      ansible.builtin.user:
        name: "{{ group_name }}"
        state: present
    
    - name: create user with name tomcat and group name tomcat with home directory
      ansible.builtin.user:
        name: "{{ user_name }}"
        group: "{{ group_name }}"
        shell: "{{ shell }}"
        home: "{{ home_dirctory }}"
        state: present

    - name: download tomcat at /tmp location
      ansible.builtin.get_url:
        url: "{{ tomcat_link }}"
        dest: "/tmp/apache-tomcat-{{ tomcat_version }}.tar.gz"

    - name: untar / extract file
      ansible.builtin.unarchive:
        copy: false
        src: "/tmp/apache-tomcat-{{ tomcat_version }}.tar.gz"
        dest: "{{ home_dirctory }}"
        group: "{{ group_name }}"
        owner: "{{ user_name }}"

    - name: create a symbolic link
      ansible.builtin.file:
        src: "{{ home_dirctory }}/apache-tomcat-{{ tomcat_version }}"
        dest: "{{ home_dirctory }}/latest"
        owner: "{{ user_name }}"
        group: "{{ group_name }}"
        state: link

    - name: Recursively change ownership of a directory
      ansible.builtin.file:
        path: "{{ home_dirctory }}"
        state: directory
        recurse: yes
        owner: "{{ user_name }}"
        group: "{{ group_name }}"

    - name: get all files to gives execute permission in one variable
      ansible.builtin.command: sudo sh -c 'ls /opt/tomcat/latest/bin/*.sh'
      register: shell_files

    - name: print all shell files
      ansible.builtin.debug:
        var: shell_files

    - name: Give insecure permissions to an existing file
      ansible.builtin.file:
        path: "{{ item }}"
        owner: "{{ user_name }}"
        group: "{{ group_name }}"
        mode: '0751'
      loop: "{{ shell_files.stdout_lines }}"